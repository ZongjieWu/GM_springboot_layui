<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.wzj</groupId>
	<artifactId>springboot</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>springboot</name>
	<description>Demo project for Spring Boot</description>
	<packaging>war</packaging>

	<properties>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>

		<!-- 预定义的第三方版本-->
		<spring-boot-alibaba-druid.version>1.1.10</spring-boot-alibaba-druid.version>
		<spring-boot-pageHelper.version>1.2.5</spring-boot-pageHelper.version>
		<spring-boot-tk-mybatis.version>2.0.4</spring-boot-tk-mybatis.version>
		<shiro-spring-boot-web-starter>1.4.0-RC2</shiro-spring-boot-web-starter>
		<commons-lang3.version>3.8</commons-lang3.version>
		<kryo-serializers.version>0.41</kryo-serializers.version>
		<kryo.version>2.24.0</kryo.version>
		<google-guava.version>26.0-jre</google-guava.version>
		<aliyun-sdk-oss.version>2.8.3</aliyun-sdk-oss.version>
		<alipay-sdk-java.version>3.3.49.ALL</alipay-sdk-java.version>
		<aliyun-java-sdk-core.version>3.7.1</aliyun-java-sdk-core.version>
		<aliyun-java-sdk-dysmsapi.version>1.1.0</aliyun-java-sdk-dysmsapi.version>
		<commons-io.version>1.3.2</commons-io.version>
		<commons-fileupload.version>1.3.1</commons-fileupload.version>
		<thymeleaf-extras-shiro.version>2.0.0</thymeleaf-extras-shiro.version>
		<gson.version>2.8.0</gson.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<!-- 移除嵌入式tomcat插件 -->
			<exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
		</dependency>
		<!-- 移除嵌入式tomcat插件 需要api -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<!--因配置外部TOMCAT 而配置-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>


		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-websocket</artifactId>-->
		<!--</dependency>-->
		<!--spring boot end-->

		<!--&lt;!&ndash; alibaba begin&ndash;&gt;-->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid-spring-boot-starter</artifactId>
			<version>${spring-boot-alibaba-druid.version}</version>
		</dependency>
		<!--&lt;!&ndash;阿里云oss&ndash;&gt;-->
		<!--<dependency>-->
			<!--<groupId>com.aliyun.oss</groupId>-->
			<!--<artifactId>aliyun-sdk-oss</artifactId>-->
			<!--<version>${aliyun-sdk-oss.version}</version>-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>org.jdom</groupId>-->
			<!--<artifactId>jdom2</artifactId>-->
			<!--<version>${jdom2.version}</version>-->
		<!--</dependency>-->
		<!--&lt;!&ndash; 阿里支付&ndash;&gt;-->
		<!--<dependency>-->
			<!--<groupId>com.alipay.sdk</groupId>-->
			<!--<artifactId>alipay-sdk-java</artifactId>-->
			<!--<version>${alipay-sdk-java.version}</version>-->
		<!--</dependency>-->

		<!--&lt;!&ndash;阿里云短信jar&ndash;&gt;-->
		<!--<dependency>-->
			<!--<groupId>com.aliyun</groupId>-->
			<!--<artifactId>aliyun-java-sdk-core</artifactId>-->
			<!--<version>${aliyun-java-sdk-core.version}</version> &lt;!&ndash;注：如提示报错，先升级基础包版，无法解决可联系技术支持&ndash;&gt;-->
		<!--</dependency>-->
		<!--<dependency>-->
			<!--<groupId>com.aliyun</groupId>-->
			<!--<artifactId>aliyun-java-sdk-dysmsapi</artifactId>-->
			<!--<version>${aliyun-java-sdk-dysmsapi.version}</version>-->
		<!--</dependency>-->
		<!--&lt;!&ndash; alibaba end&ndash;&gt;-->

		<!-- mybatis begin-->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper-spring-boot-starter</artifactId>
			<version>${spring-boot-tk-mybatis.version}</version>
		</dependency>
		<!--<dependency>-->
			<!--<groupId>org.mybatis</groupId>-->
			<!--<artifactId>mybatis</artifactId>-->
			<!--<version>3.4.1</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>tk.mybatis</groupId>
			<artifactId>mapper</artifactId>
			<version>3.4.3</version>
		</dependency>
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${spring-boot-pageHelper.version}</version>
        </dependency>
		<!-- mybatis end-->

		<!-- hibernate begin-->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate-validator.version}</version>
		</dependency>
		<!-- hibernate end-->

		<!-- apache begin-->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<!--文件上传-->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons-fileupload.version}</version>
		</dependency>

		<!--<dependency>-->
			<!--<groupId>org.apache.shiro</groupId>-->
			<!--<artifactId>shiro-spring-boot-web-starter</artifactId>-->
			<!--<version>${shiro-spring-boot-web-starter}</version>-->
		<!--</dependency>-->
		<!-- apache end-->

		<!-- json begin-->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- json end-->

		<!-- 序列化 begin-->
		<dependency>
			<groupId>com.esotericsoftware.kryo</groupId>
			<artifactId>kryo</artifactId>
			<version>${kryo.version}</version>
		</dependency>
		<dependency>
			<groupId>de.javakaffee</groupId>
			<artifactId>kryo-serializers</artifactId>
			<version>${kryo-serializers.version}</version>
		</dependency>
		<!-- 序列化 end-->

		<!-- 解决thymeleaf 模板引擎一定要执行严格的html5格式校验问题-->
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>${nekohtml.version}</version>
		</dependency>
		<!-- 解决thymeleaf shiro标签-->
		<dependency>
			<groupId>com.github.theborakompanioni</groupId>
			<artifactId>thymeleaf-extras-shiro</artifactId>
			<version>${thymeleaf-extras-shiro.version}</version>
		</dependency>

		<!-- google begin-->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${google-guava.version}</version>
		</dependency>
		<!-- 配置gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
		</dependency>
		<!-- google end-->

		<!-- lombok begin-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
		</dependency>
		<!-- lombok end-->

		<!-- mysql begin-->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${mysql.version}</version>
		</dependency>
		<!-- mysql end-->

		<!-- redis begin-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- redis begin-->

		<!--<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <optional>true</optional>
        </dependency>-->


		<!--代码自动生成相关依赖的包-->


		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>22.0</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.23</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mybatis.generator</groupId>
			<artifactId>mybatis-generator-core</artifactId>
			<version>1.3.5</version>
			<scope>test</scope>
		</dependency>


	</dependencies>


	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>com.wzj.springboot.SpringbootApplication</mainClass>
				</configuration>
			</plugin>
			<!-- 资源文件拷贝-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- java 编译插件-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- 打包时跳过测试-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<!-- mapper生成插件-->
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.5</version>
				<configuration>
					<!--配置文件的位置-->
					<configurationFile>src/main/resources/generator/generatorConfig.xml</configurationFile>
					<verbose>true</verbose>
					<overwrite>true</overwrite>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>${mysql.version}</version>
					</dependency>
					<dependency>
						<groupId>tk.mybatis</groupId>
						<artifactId>mapper</artifactId>
						<version>3.5.0</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>


</project>
